Infix to postfix


/* Algorithm:
 * 	Step1. Scan the Infix string from left to right.
 *	Step2. Initialize an empty stack.
 *	Step3. If the scanned character is an operand, add it to the Postfix string.
 *	Step4. If the scanned character is an operator and if the stack is empty push the character to stack.
 *	Step5. If the scanned character is an Operator and the stack is not empty, 
 *		compare the precedence of the character with the element on top of the stack.
 *	Step6. If top Stack has higher precedence over the scanned character pop the stack else push the scanned character to stack.
 *		Repeat this step until the stack is not empty and top Stack has precedence over the character.
 *	Step7. Repeat 4 and 5 steps till all the characters are scanned.
 *	Step8. After all characters are scanned, we have to add any character that the stack may have to the Postfix string.
 *	Step9. If stack is not empty add top Stack to Postfix string and Pop the stack.
 *	Step10. Repeat this step as long as stack is not empty.
 */